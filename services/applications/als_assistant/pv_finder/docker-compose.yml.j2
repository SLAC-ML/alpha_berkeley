version: '3.8'

name: als-agents

services:
  pv-finder-server:
    build:
      context: {{build_dir}}/services/applications/als_assistant/pv_finder
      dockerfile: Dockerfile
      args:
        PV_FINDER_PORT: {{applications.als_assistant.services.pv_finder.port_container}}
    image: mcp/pv_finder # Optional: specify image name
    volumes:
      # Use absolute paths to avoid docker-compose multi-file path resolution issues
      - {{build_dir}}/services/applications/als_assistant/pv_finder:/pv_finder
      - {{build_dir}}/services/applications/als_assistant/pv_finder/repo_src:/repo/src:ro
      - {{build_dir}}/services/applications/als_assistant/pv_finder/config.yml:/repo/config.yml:ro
    pull_policy: missing
    container_name: {{applications.als_assistant.services.pv_finder.name}}
    restart: unless-stopped
    ports:
      - "{{applications.als_assistant.services.pv_finder.port_host}}:{{applications.als_assistant.services.pv_finder.port_container}}"
    environment:
      - PYTHONPATH=/repo/src
      - REPO_SRC=/repo/src
      # Defaults from Dockerfile are HOST=0.0.0.0, PORT=8051, TRANSPORT=sse
      - PORT={{applications.als_assistant.services.pv_finder.port_container}} # Explicitly set container port
      - HOST=0.0.0.0
      - TRANSPORT=sse
      - DEBUG=true
      # ------------------
      # CBORG
      - CBORG_API_KEY=${CBORG_API_KEY}
      - CBORG_API_URL=${CBORG_API_URL}
      # API KEYS
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # SQUID proxy
      - HTTPS_PROXY=${HTTPS_PROXY}
      - https_proxy=${https_proxy}
      - NO_PROXY=${NO_PROXY}
      # Langfuse
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST}
      - LANGFUSE_ENABLED=${LANGFUSE_ENABLED}
    command: ["python", "/pv_finder/src/main.py"]

    networks:
      - alpha-berkeley-network