# ALS Assistant Application Configuration
# This file contains configuration specific to the ALS Assistant application

# File Paths - ALS Assistant specific data directories
file_paths:
  # Launcher outputs directory for PLT files
  launcher_outputs_dir: launcher_outputs

# ALS Assistant Service Deployment Control
# Enable ALS Assistant services by uncommenting them below.
# The main config.yml can override these settings for convenience.
deployed_services:
  # - applications.als_assistant.pv_finder    # Process Variable discovery for EPICS
  # - applications.als_assistant.mongo        # Primary database for ALS Assistant data
  # - applications.als_assistant.pgvector     # Vector-enabled relational database
services:
  pv_finder:
    path: ./services/applications/als_assistant/pv_finder
    name: pv-finder
    port_host: 8051
    port_container: 8051
    copy_src: true

  mongo:
    name: mongo
    path: ./services/applications/als_assistant/mongo
    port_host: 27017
    port_container: 27017
    copy_src: true

  mongo_express:
    name: mongo-express
    port_host: 8081
    port_container: 8081
    depends_on: [mongo]
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://mongo:27017/"
      ME_CONFIG_BASICAUTH_USERNAME: "admin"
      ME_CONFIG_BASICAUTH_PASSWORD: "admin123"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    copy_src: false

  langfuse:
    path: ./services/applications/als_assistant/langfuse
    name: langfuse
    copy_src: false




# ALS Assistant Application-Specific Models
models:
  data_analysis:
    provider: cborg
    model_id: anthropic/claude-sonnet
  machine_operations:
    provider: cborg
    model_id: anthropic/claude-sonnet
    max_tokens: 4096
  data_visualization:
    provider: cborg
    model_id: anthropic/claude-sonnet
    max_tokens: 4096
  pv_finder:
    keyword:
      provider: cborg
      model_id: 'google/gemini-flash' #'anthropic/claude-sonnet' #'google/gemini-flash-lite' #'openai/gpt-4o-mini' #'lbl/cborg-chat:latest' #google/gemini-flash
      max_tokens: 4096
    query_splitter:
      provider: cborg
      model_id: 'google/gemini-flash' #'anthropic/claude-sonnet' #'google/gemini-flash-lite' #'openai/gpt-4o-mini' #'lbl/cborg-chat:latest' #google/gemini-flash
      max_tokens: 4096
    pv_query:
      provider: cborg
      model_id: 'google/gemini-flash' #'anthropic/claude-sonnet' #'google/gemini-flash-lite' #'openai/gpt-4o-mini' #'lbl/cborg-chat:latest' #google/gemini-flash
      max_tokens: 4096
  launcher:
    provider: cborg
    model_id: google/gemini-flash
    max_tokens: 4096


# ALS Assistant Openweb UI pipeline configuration
pipeline:
  name: "ALS Assistant"
  startup_hooks:
    - "initialization.setup_nltk_resources"
    - "initialization.setup_system_packages" 
    - "initialization.setup_pv_finder_resources"

# ALS Assistant database configuration
database:
  ao_db:
    database_name: agentic_db
    collection_name: ao
    host: localhost

# ALS Assistant external services
external_services:
  # ALS Archiver Service
  archiver:
    url: https://controls-web.als.lbl.gov
  
  # Phoebus Launcher Configuration
  phoebus:
    executable_path: ${PATH_TO_PHOEBUS_EXECUTABLE}

# ALS Assistant benchmarks configuration
benchmarks:
  scenario_generator:
    provider: cborg
    model_id: anthropic/claude-sonnet
    max_tokens: 4096
  evaluator:
    provider: cborg
    model_id: anthropic/claude-sonnet
    max_tokens: 2048

# ============================================================
# Logging Configuration
# ============================================================

logging:
  # Application capability colors (simplified - no redundant nesting)
  logging_colors:
    # ALS Assistant pipeline
    als_assistant_pipeline: 'white'
    
    # Data capabilities
    data_analysis: "deep_sky_blue1"
    data_visualization: "dark_turquoise"
    get_archiver_data: "turquoise2"
    
    # Control capabilities  
    machine_operations: "deep_sky_blue2"
    pv_address_finding: "dodger_blue2"
    pv_value_retrieval: "dark_cyan"
    live_monitoring: "dark_goldenrod1"
    # PV Finder
    pv_finder: "light_steel_blue1"
    

    # Benchmarks capability colors
    benchmarks:
      scenario_generator: "light_coral"
      evaluator: "light_goldenrod1"
 